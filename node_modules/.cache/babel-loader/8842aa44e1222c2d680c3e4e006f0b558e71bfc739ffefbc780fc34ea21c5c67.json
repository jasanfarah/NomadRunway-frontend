{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { menuBarReducer } from \"./menubar\";\nimport { overviewCardReducer } from \"./card\";\nconst initialState = {\n  count: 0\n};\n\n// @ts-ignore\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\nexport const rootReducer = combineReducers({\n  // ...other reducers\n  menubar: menuBarReducer,\n  overviewCard: overviewCardReducer\n});\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware()\n});","map":{"version":3,"names":["combineReducers","configureStore","menuBarReducer","overviewCardReducer","initialState","count","reducer","state","arguments","length","undefined","action","type","rootReducer","menubar","overviewCard","store","middleware","getDefaultMiddleware"],"sources":["/home/jasan/NomadCalc/frontend/nomadcalc/src/redux/store.ts"],"sourcesContent":["import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\nimport {menuBarReducer} from \"./menubar\";\nimport {overviewCardReducer} from \"./card\";\n\nconst initialState = { count: 0 };\n\n// @ts-ignore\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n            return { ...state, count: state.count + 1 };\n        case 'DECREMENT':\n            return { ...state, count: state.count - 1 };\n        default:\n            return state;\n    }\n}\nexport const rootReducer = combineReducers({\n    // ...other reducers\n    menubar: menuBarReducer,\n    overviewCard: overviewCardReducer,\n});\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\n\n"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAO,kBAAkB;AAChE,SAAQC,cAAc,QAAO,WAAW;AACxC,SAAQC,mBAAmB,QAAO,QAAQ;AAE1C,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE;AAAE,CAAC;;AAEjC;AACA,SAASC,OAAOA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGL,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC/C,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGE,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC/C;MACI,OAAOE,KAAK;EAAC;AAEzB;AACA,OAAO,MAAMM,WAAW,GAAGb,eAAe,CAAC;EACvC;EACAc,OAAO,EAAEZ,cAAc;EACvBa,YAAY,EAAEZ;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMa,KAAK,GAAGf,cAAc,CAAC;EAChCK,OAAO,EAAEO,WAAW;EACpBI,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}